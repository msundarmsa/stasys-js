name: Build and Release Application

on:
  push:
    tags:
      - v*.*.*

jobs:
  build_macos:
    runs-on: macos-latest
    steps:
      - name: Download source
        uses: actions/checkout@v2
      - name: Setup node v17
        uses: actions/setup-node@v1
        with:
          node-version: 17
      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # caching node_modules
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install Dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: npm ci
      - name: Build app
        run: npm run package
      - name: Compress app
        run: cd out/STASYS-darwin-x64 && zip -r STASYS-macos.zip STASYS.app
      - name: Upload app
        uses: actions/upload-artifact@v3
        with:
          name: STASYS-macos
          path: out/STASYS-darwin-x64/STASYS-macos.zip

  build_windows:
    runs-on: windows-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Download source
        uses: actions/checkout@v2
      - name: Setup node v17
        uses: actions/setup-node@v1
        with:
          node-version: 17
      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # caching node_modules
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install Dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: npm ci
      - name: Build app
        run: OPENCV_ROOT=./prebuilt-opencv/ npm run package
      - name: Compress app
        uses: papeloto/action-zip@v1
        with:
          files: out/STASYS-win32-x64
          recursive: true
          dest: out/STASYS-windows.zip
      - name: Upload app
        uses: actions/upload-artifact@v3
        with:
          name: STASYS-windows
          path: out/STASYS-windows.zip

  release_app:
    runs-on: ubuntu-latest
    needs: [build_macos, build_windows]
    steps:
      - name: Download macos app
        uses: actions/download-artifact@v3
        with:
          name: STASYS-macos
      - name: Download windows app
        uses: actions/download-artifact@v3
        with:
          name: STASYS-windows
      - name: Release windows & macos apps
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            STASYS-windows.zip
            STASYS-macos.zip

